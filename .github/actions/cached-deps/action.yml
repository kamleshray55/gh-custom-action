name: "Get & Cache Dependencies"
description: "Get the dependencies (via npm) and cache them"
inputs: #adding inputs to action that will pass from calling module
  caching:
    description: "Whether to cache dependencies or not."
    default: "true"
    required: false
outputs:
  used-cache: # adding outputs for action
    description: "Whether the cache was used."
    value: ${{setps.install.outputs.cache}}
runs:
  using: composite
  steps:
    - name: Cache dependencies
      if: inputs.caching == 'true'
      id: cache
      uses: actions/cache@v3
      with:
        path: node_modules
        key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
    - name: Install dependencies
      id: intall
      if: steps.cache.outputs.cache-hit != 'true' || inputs.caching != 'true'
      run: |
        npm ci 
        echo "::set-output name=cache::'${{inputs.caching}}'"
      shell: bash
